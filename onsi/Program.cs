using System;

namespace onsi
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /*
                변수 : 값을 담는 메모리 공간
                 - 변수의 선언 (할당되지 않은 변수)
                 - 변수 값 대입 (초기화)

                자료형 : 해당 변수의 값 형태

                배열 : 연속적인 데이터의 나열
            
                연산자
                 - 나누기 : int / int : int
                 - 둘 중 하나가 실수형이여야한다.

                +, -, *, /, &, ++, --

                상수 : 변하지 않는 수
                int, double, char, string
                float : 소수점 7자리
                double : 소수점 14자리
                decimal : 소수점 28자리

                변수의 상수화 : const 키워드를 붙이면 해당 변수의 값은 변경 불가
                - 선언과 초기 값을 같이 할당해야한다.
                
                문자열 : 문자배열
                    => 문자열은 Immutable type(불변타입)으로 불린다
                    => 이유는 문자 상수를 참조하고 있기 때문
                string sign = "ABCD";
                sign[0] = 'Z'; => 불가능 상수 "ABCD"를 참조하고 있기 때문에 값 변경이 불가능하다

                string "ABC" => char[] 'A','B','C'
                sign = sign + "EEEE" : 기존에 참조하던 sign의 문자열이 버려지고 길이 8의 새로운 문자열이 생성
                

                클래스, 구조체
                => 객체 : 변수와 함수의 집합체(여러 데이터의 집합체)

                클래스 : 참조 타입 / 구조체 : 값 타입
                참조 타입 : 특정한값이 있는 위치 주소를 값으로 가지는 형태
                값 타입 : 내가 값을 가지는 형태 (값을 복사)

                * 함수의 구분 방법 함수와 매개변수로 구분 (반환형 없음)
                오버로딩 : 동일한 함수명을 가졌지만 다른 매개변수를 받는 함수처리
                Save();
                Save(100);

                오버라이딩 : 상속 관계에서 특정 함수의 재정의하는 방법
                부모의 함수는 virtual로 상속받은 클래스의 함수는 override로 재정의하여 사용

                is, as 키워드
                is : 상속 관계에서 해당 자료형이 맞는가
                as : 상속 관계에서 해당 자료형으로 업, 다운 스케일링하라 (불가능하면 null)
                
                
                   
                
                
                
                
                













            */
            int num;
            num = 10;
            Console.WriteLine(num);


        }
    }
}
